---
import CartShop from '@/components/icons/CartShop.astro'
import Modal from '@/components/Modal.astro'
import AboutIcon from '@/components/icons/Header/About.astro'
import ContactIcon from '@/components/icons/Header/Contact.astro'
import QuestionIcon from '@/components/icons/Header/Question.astro'
import UserIcon from '@/components/icons/Header/User.astro'

interface Link {
  href: string
  text: string
  label?: string
  type?: 'question' | 'user' | 'contact' | 'about'
}

const linksIcons = {
  question: QuestionIcon,
  user: UserIcon,
  contact: ContactIcon,
  about: AboutIcon
}

const links: Link[] = [
  { href: '/', text: 'Inicio', label: 'Ir a la página de Inincio' },
  { href: '/preguntas', text: 'Preguntas', label: 'Ir a la página de Preguntas', type: 'question' },
  { href: '/registro', text: 'Registro', label: 'Ir a la página de Registro', type: 'user' },
  { href: '/contacto', text: 'Contacto', label: 'Ir a la página de Contacto', type: 'contact' },
  { href: '/quienes-somos', text: 'Nosotros', label: 'Ir a sobre nosotros', type: 'about' },
]
---

<header class="hidden md:flex justify-between items-center">
  <picture>
    <img
      decoding="async" 
      src="/img/loginver-logo-small.webp" 
      alt="Logo de LOGIN Centro Mayorista"
      class="size-[100px]"
    />
  </picture>

  <nav>
    <ul class="flex gap-3 px-5">
      <button>
        <CartShop class="size-6 hover:text-yellow-400/90 transition" />
      </button>
      {
        links.map(({ href, label, text }) => (
          <li>
            <a 
              href={href} 
              class="text-white hover:text-orange-400/90 transition"
              aria-label={label}
            >
              {text}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<header class="flex justify-between items-center md:hidden" id="header-mobile">
  <figure>
    <img
      decoding="async" 
      src="/img/loginver-logo-small.webp" 
      alt="Logo de LOGIN Centro Mayorista"
      class="size-[100px]"
    />
  </figure>

  <h2> LOGIN Mayorista </h2>

  <div class="flex justify-center items-center gap-3 px-5">
    <button>
      <CartShop class="text-red-200/90 size-6 hover:text-yellow-400/90 transition" />
    </button>
    
    <button class="nav-button" aria-label="Menú hamburguesa">
      <div></div>
      <div></div>
      <div></div>
      <div></div>
    </button>
  </div>

<!--   <nav class="hidden">
    <ul class="flex flex-col gap-3 px-5">
      {
        links.map(({ href, label, text, type }) => {
          const IconComponent = linksIcons[type]

          if (!IconComponent) return 

          return (
            <li>
              <a 
                href={href} 
                class="text-orange-400/90 transition"
                aria-label={label}
              >
                <IconComponent class="size-10 sm:size-12"/>
                {text}
              </a>
            </li>
          )
        })
      }
    </ul> -->
  </nav>

  <Modal className="menu-dialog" idModal="modal-menu" isButton={false}>
    <div class="flex flex-col justify-center items-center gap-y-5">
      <div class="flex w-full justify-between items-center">
        <span> Menú </span>
        <button class="hamburguer-button">
          <div></div>
          <div></div>
          <div></div>
          <div></div>
        </button>
      </div>
      <hr
        class="h-[2px] w-full border-t-0"
        style="background:linear-gradient(to right, transparent 0%, white 50%, transparent 100%)"
      />
      <div> 
        <img 
          src="/img/loginver-logo-small.webp" 
          alt="Logo de LOGIN Centro Mayorista" 
          loading="lazy"
          class="size-auto object-cover"
          style="filter: drop-shadow(0 0 10px rgba(2, 2, 2, .9));" 
        />
      </div>
      {
        links.map(({ text, href, label, type }) => {
          const IconComponent = linksIcons[type]

          if (!IconComponent) return

          return (
            <hr
              class={`h-[2px] w-full border-t-0 `}
              style="background:linear-gradient(to right, transparent 0%, white 50%, transparent 100%)"
            />
            <a 
              href={href} 
              aria-label={label} 
              class={`text-xl group uppercase flex gap-3 justify-center items-center hover:text-orange-500/90`}
            >
              <IconComponent class="size-10 sm:size-12 group-hover:text-orange-300/90"/>
              {text}
            </a>
          )
        })
      }
      <hr
        class="h-[2px] w-full border-t-0"
        style="background:linear-gradient(to right, transparent 0%, white 50%, transparent 100%)"
      />
    </div>
  
  </Modal>
</header>

<style>
  header {
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease-in-out;
  }

  button:focus {
    outline: none;
  }

  .scroll-mobile {
    background: linear-gradient(to bottom, rgb(120, 119, 198, 1) 0%, rgba(255,255,255,0));
  }

  .scroll-header {
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.5) 0%, transparent);
    backdrop-filter: blur(10px);
  }

  .hamburguer-button, .nav-button {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 1.5rem;
    height: 1.2rem;
    border: 0;
    background: transparent;
    gap: .30rem;
    transition: all 0.5s ease;
  }

  .hamburguer-button.active div:first-child, .nav-button.active div:first-child {
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
  }

  .hamburguer-button.active div:nth-child(2), .nav-button.active div:nth-child(2) {
    opacity: 0;
  }

  .hamburguer-button.active div:nth-child(3), .nav-button.active div:nth-child(3) {
    opacity: 0;
  }

  .hamburguer-button.active div:nth-child(4), .nav-button.active div:nth-child(4) {
    transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
  }

  .hamburguer-button > div, .nav-button > div {
    background: #FFF;
    height: 1px;
    width: 100%;
    transition: all .5s;
    transform-origin: left;
  }
</style>

<script>
  import { $ } from '@/lib/dom-selector'

  const $header = $('header') as HTMLElement
  const $headerMobile = $('#header-mobile') as HTMLElement
  const $modal = $('#modal-menu') as HTMLDialogElement

  const $hamburguerButton = $('.nav-button') as HTMLButtonElement
  const $hamburguerButtonModal = $('.hamburguer-button') as HTMLButtonElement

  const $nav = $('nav') as HTMLElement
 
  window.addEventListener('scroll', () => {
    if (window.scrollY > 100) {
      $header.classList.add('scroll-header')
      $headerMobile.classList.add('bg-gray-950')
      $headerMobile.classList.add('scroll-mobile')
    } else {
      $header.classList.remove('scroll-header')
      $headerMobile.classList.remove('bg-gray-950')
      $headerMobile.classList.remove('scroll-mobile')
    }
  })

  $hamburguerButton.addEventListener('click', () => {
    
    $modal.showModal()
   
    requestAnimationFrame(() => {
      $hamburguerButton.classList.add('active')
      $hamburguerButtonModal.classList.add('active')
    })

    $hamburguerButtonModal.addEventListener('click', () => {
      $hamburguerButtonModal.classList.remove('active')
      $hamburguerButton.classList.remove('active')
      $modal.close()
    })
  })

</script>